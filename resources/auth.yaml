openapi: 3.0.3
info:
  title: ITS Reg Auth
  description: ITS Reg Auth
  version: 1.0.0
servers:
  - url: 'http://{hostname}:8500/api'
    variables:
      hostnameTML:
        default:
          localhost

paths:
  /register:
    post:
      operationId: registerUser
      requestBody:
        description: TODO
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostRegister'
      responses:
        "201":
          description: TODO
        "400":
          description: Incorrect request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "409":
          description: User with UUID or email is already exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /login:
    post:
      operationId: loginUser
      requestBody:
        description: TODO
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostLogin'
      responses:
        "200":
          description: TODO
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Authenticated'
        "401":
          description: Invalid credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /users/{uuid}:
    get:
      operationId: getUser
      parameters:
        - in: path
          name: uuid
          schema:
            type: string
            example: "1234"
          required: true
          description: TODO
      responses:
        "200":
          description: TODO
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        "404":
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:

    PostRegister:
      type: object
      required:
        - uuid
        - email
        - password
      properties:
        uuid:
          type: string
          example: "1234"
        email:
          type: string
          example: test@test.com
        password:
          type: string
          example: Mf55rUV24GY5

    PostLogin:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          example: test@test.com
        password:
          type: string
          example: Mf55rUV24GY5

    Authenticated:
      type: object
      required:
        - accessToken
      properties:
        accessToken:
          type: string

    User:
      type: object
      required:
        - uuid
        - email
        - createdAt
        - updatedAt
      properties:
        uuid:
          type: string
          example: "1234"
        email:
          type: string
          example: test@test.com
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    Error:
      type: object
      required:
        - message
      properties:
        message:
          type: string
          example: error message
